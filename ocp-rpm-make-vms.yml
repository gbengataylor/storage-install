# file: ocp-rpm-make-vms.yml
#
# prerequisites:
# $ sudo yum --enablerepo=rhel-7-server-rhv-4.1-rpms install python-ovirt-engine-sdk4
#
# vm definitions / assumptions:
#   see home.lab/ocp-rpm-vars.yml
#
# execution:
# $ ansible-playbook -i home.lab/inventory ocp-rpm-make-vms.yml --ask-vault-pass

---
- hosts: rhvm
  gather_facts: yes
  vars_files:
  - "{{ ansible_domain }}/rhvm-vault.yml"
  - "{{ ansible_domain }}/ocp-rpm-vars.yml"

  vars:
    templateName: "{{ templateName }}"

  tasks:
    - name: Login to RHV
      ovirt_auth:
        url: "{{ rhvurl }}"
        insecure: yes
        username: "{{ rhvuser }}"
        password: "{{ rhvpass }}"

    - name: Create VMs
      ovirt_vms:
        auth: "{{ ovirt_auth }}"
        cluster: "{{ rhvCluster }}"
        template: "{{ templateName }}"
        name: "{{ item.key }}"
        state: present
#       clone: true
        instance_type: "{{ instanceType }}"
        nics:
          - name: nic1
            profile_name: ovirtmgmt
#          - name: nic2
#            profile_name: ovirtmgmt
        cloud_init:
          host_name: "{{ item.key }}.{{ ansible_domain }}"
          user_name: cloud-user
          root_password: "{{ vm_root_password }}"
          authorized_ssh_keys: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC1vfRWODjNpS45BwAD864B1ezqIOb5fxCjnOwsgx/p8QchwWQhIUeC+PAUBI/QJ/nzX2pUOx0erNu8wuQRobOMxmYmsIyeuIIkBSJxffeFm4Cuy0glgkNR5ry90AHabO7bvXoY1q2QJ6sdkMeh2r1b/tx+2KFBOpe6v2HAcBpS+srl/fpdOV0GK2HNC0DsHz/2/me2hQ9gNIBOrb/Y7TJL5GcmbbHeteW4g648w1771El6r+JugmwlJ7/B/Jw5b4StpJmYQq0s1x9TJnqXO1kZGZ1YDrUEF25ZxkLZxmLxwD8hUDVbaeCAjbNQCe5OXc3wl96VvwXsPE2d838DBUTL jcall@home.lab
          dns_servers: "{{ dnsServer }}"
          dns_search: "{{ ansible_domain }}"
          custom_script: |
            runcmd:
              - hostnamectl set-hostname {{ item.key }}.{{ ansible_domain }}
              - nmcli con add type ethernet connection.id eth0 connection.interface-name eth0 ipv4.method static ipv4.addresses {{ item.value.nic1.ipaddress }}/24 ipv4.gateway {{ item.value.nic1.gateway }} ipv4.dns {{ dnsServer }} ipv4.dns-search {{ ansible_domain }}
              - nmcli con del "System eth0"
              #- nmcli con modify "System eth1" connection.id eth1
              - systemctl mask cloud-init
#        cloud_init_nics:   # Requires "nmcli net off/on" to apply
#          - nic_name: eth0
#            nic_on_boot: true
#            nic_boot_protocol: static
#            nic_ip_address: "{{ item.value.nic1.ipaddress }}"
#            nic_netmask:    "{{ item.value.nic1.netmask }}"
#            nic_gateway:    "{{ item.value.nic1.gateway }}"
#          - nic_name: eth1
#            nic_on_boot: true
#           nic_boot_protocol: static
#           nic_ip_address: "{{ item.value.nic2.ipaddress }}"
#           nic_netmask:    "{{ item.value.nic2.netmask }}"
#           nic_gateway:    "{{ item.value.nic2.gateway }}"
        wait: true
      with_dict: "{{ vms }}" # See home.lab/ocp-cns-vars.yml

    - name: Create and attach disks
      ovirt_disk:
        auth: "{{ ovirt_auth }}"
        vm_name: "{{ item.0.name }}"
        storage_domain: "{{ storageDomain }}"
        name: "{{ item.0.name }}-disk-{{ item.1 }}"
        size: "{{ disks_size }}"
        format: cow
        interface: virtio_scsi
        wait: true
      with_subelements:
          - "{{ disks }}"
          - id

    - name: Cleanup RHV auth token
      ovirt_auth:
        ovirt_auth: "{{ ovirt_auth }}"
        state: absent
